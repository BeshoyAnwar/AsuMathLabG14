#include "cmatrix.h"
#include "helpers.h"
#include <fstream>
#include <iostream>
#include <string>
//#include <time.h>

using namespace std;

int main(int argc, char* argv[]) {

	//int t1 = clock();
	//CMatrix B("[9999876466748.9 7.3 4.8 2.4 2.3 6.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9]");
	//CMatrix B("[8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9 8.9 7.3 4.8 2.4 2.3 6.5 8.9 1.2 4.9 3.8 7.2 7.5 9.8 3.4 7.5 8.9;]");
	//CMatrix B("[0.1 0.2 0.5 2.3 0.3 0.5 0.6 0.7 0.8 0.3;0.5 0.7 3.2 2.3 1.8 2.9 1.7 3.5 3.5 0;0.6 0.7 2.3 1.3 1.7 1.3 1.2 1.5 1.6 1.9;1.1 2.5 1.8 1.3 5.3 3.5 1.6 2.7 0.8 1.3;1.1 2.2 1.5 0.3 1.3 0.50 2.6 1.7 0.8 0.3;1.1 2.2 3.1 0.3 1.9 0.3 2.6 1.7 2.8 3.3;2.1 1.2 0.5 3.0 3.1 1.4 2.7 1.1 0.2 1.3;2.1 3.2 1.5 2.3 1.3 1.5 3.6 1.7 1.8 4.3;4.1 1.2 3.5 2.9 3.3 6.5 2.6 1.6 2.4 1.3;2.1 2.1 1.1 2.3 4.3 5.2 1.1 2.2 1.2 3.1]");
	//CMatrix B("[0 0 0 0 0; 6.3 2.5 8.1 3.1 0.0; 6.4 2.8 7.1 8.1 6.0; 3.2 5.1 7.2 6.2 3.0;4.1 3.5 2.7 2.3 7.8]");
	//CMatrix B("[1 2 3 4 5 8 1.4 2.2 4.4 1.5;7 8.2 9 1 0.2 0.8 4 2.3 10 8;6 8 10 2.6 1.1 0.9 0.6 1.3 12 5;1 3 6 8 9.8 1.4 5 5 6 7;4 9 6 9 0.4 0.66 0.89 2 1 4;0.5 1 4 6 9 0.9 0.8 0.9 0.8 1.333;7 8 9 1 3 5 6 8 9 10;8.8 1.2 3.4 5.8 0.8 9.6 5.6 6.76 8.99 10;4 7.8 9 9 2 6 7 9 22 11;1 4.5 0.11 1 4.5 6.7 8.9 1.5 9 8.999]");
	//CMatrix B("[1 2 3 4 5;7 8 9 10 8;6 8 10 12 5;1 3 5 6 7;4 9 2 1 4]");
	//CMatrix B("[58.00 22.00 59.00 97.00 99.00 99.00 20.00 20.00 36.00 84.00 12.00 15.00 53.00 85.00 41.00 99.00 67.00 8.00 44.00 69.00 81.00 79.00 8.00 7.00 59.00 6.00 49.00 75.00 26.00 24.00 7.00 74.00; 84.00 28.00 46.00 45.00 81.00 14.00 49.00 68.00 38.00 7.00 93.00 4.00 5.00 97.00 17.00 55.00 41.00 43.00 33.00 97.00 79.00 36.00 55.00 33.00 54.00 30.00 52.00 4.00 79.00 88.00 70.00 54.00; 72.00 76.00 1.00 15.00 86.00 31.00 80.00 75.00 60.00 14.00 38.00 57.00 90.00 38.00 81.00 47.00 42.00 18.00 70.00 31.00 61.00 19.00 81.00 90.00 33.00 72.00 63.00 2.00 2.00 28.00 21.00 98.00; 47.00 45.00 6.00 22.00 86.00 94.00 77.00 44.00 83.00 47.00 40.00 85.00 64.00 23.00 37.00 53.00 68.00 30.00 55.00 66.00 58.00 12.00 56.00 18.00 1.00 42.00 76.00 6.00 2.00 84.00 23.00 70.00; 12.00 50.00 75.00 11.00 50.00 95.00 88.00 20.00 1.00 83.00 98.00 92.00 48.00 84.00 45.00 87.00 62.00 43.00 58.00 59.00 71.00 16.00 72.00 32.00 41.00 83.00 88.00 15.00 76.00 16.00 98.00 39.00; 83.00 5.00 97.00 46.00 69.00 75.00 17.00 87.00 20.00 30.00 42.00 35.00 89.00 73.00 80.00 73.00 77.00 86.00 81.00 85.00 22.00 45.00 79.00 85.00 13.00 35.00 35.00 83.00 86.00 96.00 48.00 85.00; 52.00 21.00 60.00 82.00 36.00 88.00 19.00 36.00 92.00 65.00 78.00 98.00 96.00 86.00 11.00 76.00 47.00 21.00 2.00 45.00 2.00 64.00 39.00 72.00 57.00 70.00 20.00 54.00 59.00 80.00 98.00 91.00; 60.00 10.00 91.00 67.00 33.00 75.00 36.00 99.00 75.00 90.00 76.00 56.00 72.00 3.00 86.00 67.00 15.00 42.00 95.00 66.00 56.00 86.00 37.00 98.00 26.00 64.00 85.00 65.00 8.00 40.00 60.00 14.00; 54.00 12.00 52.00 38.00 6.00 25.00 30.00 49.00 79.00 79.00 13.00 38.00 17.00 21.00 45.00 91.00 69.00 39.00 8.00 65.00 62.00 73.00 81.00 70.00 47.00 53.00 8.00 8.00 15.00 29.00 66.00 89.00; 63.00 71.00 41.00 59.00 31.00 72.00 14.00 66.00 88.00 70.00 68.00 99.00 55.00 50.00 44.00 36.00 78.00 6.00 27.00 13.00 23.00 71.00 27.00 73.00 61.00 73.00 34.00 2.00 87.00 17.00 63.00 53.00; 26.00 95.00 95.00 13.00 6.00 70.00 59.00 5.00 96.00 33.00 23.00 52.00 79.00 19.00 26.00 93.00 85.00 65.00 71.00 44.00 7.00 71.00 87.00 99.00 19.00 96.00 15.00 52.00 92.00 53.00 57.00 90.00; 59.00 57.00 86.00 9.00 65.00 86.00 19.00 59.00 13.00 35.00 28.00 1.00 68.00 69.00 56.00 31.00 78.00 74.00 95.00 43.00 74.00 16.00 24.00 11.00 85.00 22.00 71.00 57.00 95.00 74.00 38.00 83.00; 58.00 95.00 22.00 83.00 31.00 3.00 32.00 0.00 90.00 80.00 8.00 5.00 2.00 58.00 18.00 57.00 61.00 20.00 28.00 56.00 13.00 32.00 92.00 82.00 67.00 20.00 58.00 74.00 87.00 94.00 83.00 64.00; 64.00 14.00 46.00 90.00 25.00 55.00 63.00 67.00 92.00 31.00 19.00 80.00 18.00 28.00 48.00 20.00 79.00 91.00 66.00 87.00 8.00 26.00 25.00 59.00 18.00 20.00 35.00 14.00 56.00 47.00 56.00 34.00; 60.00 51.00 8.00 78.00 94.00 89.00 24.00 76.00 94.00 90.00 89.00 72.00 19.00 1.00 2.00 44.00 23.00 39.00 9.00 27.00 37.00 86.00 16.00 27.00 69.00 23.00 99.00 14.00 15.00 44.00 36.00 69.00; 78.00 76.00 58.00 52.00 46.00 37.00 15.00 88.00 16.00 88.00 82.00 74.00 33.00 15.00 56.00 56.00 62.00 16.00 24.00 29.00 42.00 84.00 72.00 49.00 96.00 26.00 82.00 2.00 75.00 16.00 65.00 52.00; 59.00 55.00 17.00 44.00 54.00 43.00 24.00 99.00 22.00 21.00 33.00 13.00 17.00 93.00 73.00 60.00 75.00 74.00 85.00 1.00 22.00 8.00 95.00 26.00 20.00 91.00 88.00 29.00 72.00 77.00 93.00 8.00; 54.00 22.00 76.00 37.00 16.00 3.00 90.00 12.00 89.00 53.00 79.00 99.00 22.00 2.00 2.00 69.00 54.00 29.00 34.00 38.00 74.00 26.00 63.00 34.00 72.00 48.00 53.00 3.00 7.00 18.00 33.00 37.00; 95.00 79.00 61.00 44.00 59.00 61.00 7.00 76.00 72.00 45.00 92.00 72.00 28.00 96.00 11.00 35.00 35.00 29.00 16.00 32.00 56.00 58.00 49.00 20.00 96.00 24.00 20.00 26.00 6.00 83.00 45.00 74.00; 91.00 88.00 38.00 64.00 4.00 77.00 53.00 42.00 4.00 23.00 52.00 25.00 11.00 42.00 24.00 49.00 35.00 90.00 46.00 28.00 55.00 4.00 41.00 9.00 81.00 79.00 2.00 83.00 92.00 32.00 12.00 99.00; 61.00 47.00 5.00 90.00 69.00 59.00 28.00 39.00 28.00 80.00 71.00 78.00 40.00 56.00 48.00 44.00 45.00 25.00 10.00 98.00 16.00 80.00 15.00 64.00 26.00 72.00 79.00 93.00 82.00 5.00 36.00 33.00; 5.00 87.00 32.00 38.00 65.00 64.00 18.00 99.00 32.00 8.00 96.00 38.00 78.00 38.00 45.00 59.00 69.00 44.00 62.00 69.00 49.00 18.00 67.00 58.00 43.00 61.00 3.00 90.00 86.00 26.00 3.00 4.00; 0.00 68.00 23.00 47.00 96.00 66.00 30.00 65.00 52.00 0.00 17.00 73.00 86.00 68.00 97.00 79.00 24.00 28.00 60.00 58.00 25.00 67.00 12.00 34.00 52.00 69.00 62.00 70.00 11.00 35.00 90.00 11.00; 64.00 50.00 60.00 45.00 67.00 54.00 87.00 17.00 65.00 42.00 88.00 73.00 15.00 79.00 37.00 88.00 69.00 86.00 30.00 9.00 40.00 21.00 19.00 81.00 26.00 20.00 11.00 54.00 93.00 84.00 57.00 99.00; 36.00 29.00 50.00 57.00 5.00 65.00 34.00 49.00 94.00 92.00 70.00 19.00 17.00 13.00 53.00 17.00 77.00 60.00 5.00 53.00 91.00 62.00 76.00 54.00 72.00 34.00 16.00 50.00 93.00 45.00 52.00 47.00; 21.00 61.00 44.00 59.00 66.00 85.00 39.00 18.00 7.00 68.00 54.00 50.00 32.00 99.00 20.00 35.00 98.00 92.00 16.00 82.00 29.00 16.00 59.00 58.00 83.00 99.00 35.00 57.00 70.00 71.00 42.00 80.00; 77.00 6.00 95.00 86.00 3.00 52.00 18.00 35.00 85.00 28.00 78.00 60.00 1.00 49.00 64.00 85.00 26.00 57.00 37.00 41.00 38.00 93.00 96.00 33.00 93.00 68.00 73.00 35.00 9.00 96.00 81.00 61.00; 39.00 84.00 23.00 99.00 31.00 49.00 42.00 6.00 50.00 87.00 40.00 69.00 23.00 88.00 67.00 83.00 0.00 58.00 6.00 38.00 63.00 20.00 66.00 58.00 85.00 23.00 29.00 98.00 56.00 70.00 75.00 96.00; 83.00 88.00 19.00 46.00 90.00 75.00 69.00 19.00 41.00 97.00 45.00 54.00 58.00 58.00 94.00 91.00 41.00 37.00 0.00 32.00 75.00 36.00 38.00 58.00 80.00 85.00 13.00 84.00 53.00 27.00 85.00 26.00; 70.00 36.00 81.00 70.00 49.00 48.00 77.00 99.00 35.00 73.00 37.00 51.00 31.00 17.00 33.00 71.00 76.00 29.00 31.00 44.00 42.00 67.00 0.00 28.00 16.00 34.00 99.00 57.00 40.00 81.00 23.00 41.00; 31.00 49.00 39.00 99.00 75.00 99.00 63.00 45.00 26.00 1.00 24.00 83.00 89.00 35.00 24.00 95.00 45.00 70.00 83.00 17.00 92.00 52.00 24.00 73.00 40.00 55.00 68.00 70.00 43.00 30.00 56.00 65.00; 14.00 80.00 58.00 58.00 24.00 8.00 11.00 67.00 17.00 28.00 90.00 99.00 80.00 70.00 90.00 12.00 0.00 64.00 75.00 84.00 82.00 11.00 6.00 68.00 44.00 26.00 36.00 66.00 92.00 88.00 38.00 65.00]");
	//CMatrix B("B = [1.2 3.4 5.6 7.8 1.0 3.2 2.1 2.3 1.4 2.6 2.7 2.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 3.7 1.2 3.4 5.6 7.8 9.0 1.2 2.1 2.3 2.4 1.6; 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 7.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 4.1 2.3; 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 1.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1; 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 17.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0; 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.2 2.1 2.3 2.4 1.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6; 7.4 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4; 5.6 7.8 9.0 2.2 4.4 2.3 2.4 2.6 2.7 1.2 3.4 5.6 2.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2; 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 1.8 9.0 1.2 2.1 2.3 2.4 8.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7; 1.2 3.4 5.6 7.8 9.0 2.2 5.1 4.3 12.4 2.6 2.7 1.2 3.4 5.6 97.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 3.4 2.6; 2.7 1.2 3.4 5.6 7.5 9.0 2.2 2.1 3.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 5.1 2.3 2.4 5.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 8.2 2.1 2.3; 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 6.6 2.7 1.2 3.4 5.6 2.8 9.0 1.2 2.1; 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 5.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 0.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0; 4.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 5.2 2.1 2.3 2.4 9.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 5.3 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.3; 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 3.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 3.4 2.6 3.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 8.4 2.6 2.7 1.2 3.4; 5.6 7.8 9.0 2.2 2.1 2.3 3.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 1.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2; 3.4 1.6 7.8 9.0 2.2 3.1 6.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7; 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 4.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 1.6; 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 1.4 2.6 2.7 1.2 3.4 9.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 1.4 2.6 2.7 2.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3; 2.4 2.6 2.7 1.2 3.4 5.6 7.8 1.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 8.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9.0 2.2 2.1; 7.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 3.6 1.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 7.2 3.4 5.6 7.8 9.0; 2.2 2.1 2.3 2.4 2.6 7.7 9.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.9 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.2 2.1 2.3 2.4 2.6 7.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6; 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4; 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 5.7 9.3 3.4 5.6 3.8 9.0 2.2 5.1 2.3 2.4 2.6 2.7 1.2];");
	//CMatrix B("a = [2.7 1.2 3.4 5.6 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 2.7 1.2 3.4 7.8 9.0 2.2 2.1 7.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 4.1 2.3; 2.4 2.6 2.7 1.2 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 1.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1; 2.3 2.4 2.6 2.7 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 2.1 2.3 2.4 2.6 1.2 3.4 5.6 17.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0; 2.2 2.1 2.3 2.4 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.2 2.1 2.3 1.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6; 7.4 9.0 2.2 2.1 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4; 5.6 7.8 9.0 2.2 2.3 2.4 2.6 2.7 1.2 3.4 5.6 2.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2; 3.4 5.6 7.8 9.0 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 1.8 9.0 1.2 2.1 2.3 2.4 8.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7; 1.2 3.4 5.6 7.8 2.2 5.1 4.3 12.4 2.6 2.7 1.2 3.4 5.6 97.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 3.4 2.6; 2.7 1.2 3.4 5.6 9.0 2.2 2.1 3.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 5.1 2.3 2.4 5.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 2.7 1.2 3.4 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 8.2 2.1 2.3; 2.4 2.6 2.7 1.2 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 6.6 2.7 1.2 3.4 5.6 2.8 9.0 1.2 2.1; 2.3 2.4 2.6 2.7 3.4 5.6 7.8 9.0 2.2 5.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 0.1 2.3 2.4 2.6 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0; 4.2 2.1 2.3 2.4 2.7 1.2 3.4 5.6 7.8 9.0 5.2 2.1 2.3 2.4 9.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.2 2.1 2.3 2.6 2.7 1.2 3.4 5.6 7.8 9.0 5.3 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.3; 7.8 9.0 2.2 2.1 2.4 2.6 2.7 3.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 3.4 2.6 3.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 8.4 2.6 2.7 1.2 3.4; 5.6 7.8 9.0 2.2 2.3 3.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 1.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2; 3.4 1.6 7.8 9.0 3.1 6.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7; 1.2 3.4 5.6 7.8 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 4.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 1.6; 2.7 1.2 3.4 5.6 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 1.4 2.6 2.7 1.2 3.4 9.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 2.7 1.2 3.4 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 1.4 2.6 2.7 2.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3; 2.4 2.6 2.7 1.2 5.6 7.8 1.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 8.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9.0 2.2 2.1; 7.3 2.4 2.6 2.7 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 3.6 1.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 2.1 2.3 2.4 2.6 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 7.2 3.4 5.6 7.8 9.0; 2.2 2.1 2.3 2.4 7.7 9.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.9 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.2 2.1 2.3 2.6 7.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6; 7.8 9.0 2.2 2.1 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4; 5.6 7.8 9.0 2.2 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 5.7 9.3 3.4 5.6 3.8 9.0 2.2 5.1 2.3 2.4 2.6 2.7 1.2]");
	//CMatrix B("a = [1.2 5.6 7.8 1.0 3.2 2.1 2.3 1.4 2.6 2.7 2.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 3.7 1.2 3.4 5.6 7.8 9.0 1.2 2.1 2.3 2.4 1.6; 2.7 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 1.2 3.4 5.6 7.8 9.0 2.2 2.1 7.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 4.1 2.3; 2.4 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 1.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1; 2.3 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 2.1 2.4 2.6 2.7 1.2 3.4 5.6 17.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0; 2.2 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.1 2.3 2.4 1.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6; 7.4 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4; 5.6 9.0 2.2 4.4 2.3 2.4 2.6 2.7 1.2 3.4 5.6 2.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2; 3.4 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 1.8 9.0 1.2 2.1 2.3 2.4 8.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7; 1.2 5.6 7.8 9.0 2.2 5.1 4.3 12.4 2.6 2.7 1.2 3.4 5.6 97.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 3.4 2.6; 2.7 3.4 5.6 7.5 9.0 2.2 2.1 3.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 5.1 2.3 2.4 5.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4; 2.6 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 8.2 2.1 2.3; 2.4 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 6.6 2.7 1.2 3.4 5.6 2.8 9.0 1.2 2.1; 2.3 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 5.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 0.1 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0; 4.2 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 5.2 2.1 2.3 2.4 9.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 5.3 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.3; 7.8 2.2 2.1 2.3 2.4 2.6 2.7 3.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 3.4 2.6 3.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 8.4 2.6 2.7 1.2 3.4; 5.6 9.0 2.2 2.1 2.3 3.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 1.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2; 3.4 7.8 9.0 2.2 3.1 6.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7; 1.2 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 4.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 1.6; 2.6 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 1.4 2.6 2.7 2.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3; 2.4 2.7 1.2 3.4 5.6 7.8 1.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 8.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9.0 2.2 2.1; 7.3 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 3.6 1.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2; 2.1 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 7.2 3.4 5.6 7.8 9.0; 2.2 2.3 2.4 2.6 7.7 9.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.9 2.4 2.6 2.7 1.2 3.4 5.6 7.8; 9.0 2.1 2.3 2.4 2.6 7.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6; 7.8 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4; 5.6 9.0 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9.0 2.2 2.1 2.3 2.4 2.6 5.7 9.3 3.4 5.6 3.8 9.0 2.2 5.1 2.3 2.4 2.6 2.7 1.2]");
	//CMatrix B("[2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 ;2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 7.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 4.1 2.3 ;2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 1.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 ;2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 ;2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 ;2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 ;9 2.2 2.1 2.3 2.4 1.6 2.7 1.2 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 ;7.4 9 2.2 2.1 2.3 2.4 2.6 2.7 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 ;5.6 7.8 9 2.2 4.4 2.3 2.4 2.6 1.2 3.4 5.6 2.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 ;3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.7 1.2 3.4 5.6 1.8 9 1.2 2.1 2.3 2.4 8.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 ;1.2 3.4 5.6 7.8 9 2.2 5.1 4.3 2.6 2.7 1.2 3.4 5.6 97.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 3.4 2.6 ;2.7 1.2 3.4 5.6 7.5 9 2.2 2.1 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 5.1 2.3 2.4 5.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 ;2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 8.2 2.1 2.3 ;2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 6.6 2.7 1.2 3.4 5.6 2.8 9 1.2 2.1 ;2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 2.2 5.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 0.6 2.7 1.2 3.4 5.6 7.8 9 2.2 ;0.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 ;4.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 7.8 9 5.2 2.1 2.3 2.4 9.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 ;9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 5.6 7.8 9 5.3 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.3 ;7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 3.4 5.6 7.8 9 2.2 2.1 2.3 3.4 2.6 3.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 8.4 2.6 2.7 1.2 3.4 ;5.6 7.8 9 2.2 2.1 2.3 3.4 2.6 1.2 3.4 5.6 7.8 9 2.2 2.1 1.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 ;3.4 1.6 7.8 9 2.2 3.1 6.3 2.4 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 ;1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 4.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 1.6 ;2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 1.4 2.6 2.7 1.2 3.4 9.6 7.8 9 2.2 2.1 2.3 2.4 ;2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 1.4 2.6 2.7 2.2 3.4 5.6 7.8 9 2.2 2.1 2.3 ;2.4 2.6 2.7 1.2 3.4 5.6 7.8 1 2.1 2.3 2.4 2.6 2.7 1.2 3.4 8.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 2.6 7.8 9 2.2 2.1 ;7.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 2.2 2.1 2.3 2.4 3.6 1.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 ;2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 7.2 3.4 5.6 7.8 9 ;2.2 2.1 2.3 2.4 2.6 7.7 9.2 3.4 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.9 2.4 2.6 2.7 1.2 3.4 5.6 7.8 ;9 2.2 2.1 2.3 2.4 2.6 7.7 1.2 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 ;7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 2.7 1.2 3.4 ;5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 1.2 3.4 5.6 7.8 9 2.2 2.1 2.3 2.4 2.6 5.7 9.3 3.4 5.6 3.8 9 2.2 5.1 2.3 2.4 2.6 2.7 1.2;]");
	//cout << /*B.getString(4) << endl <<*/ B.getDeterminant() << " " << B.getDeterminant2() << endl;// << clock()-t1 << endl ;
	//int zerotest =-654 ;
	//cout<<zerotest<<endl;
	//CMatrix A = B.getInverse();
	//cout << A.getString() <<endl;

	//argc = 2;
	//argv[1] =  "example.m";
	// argv[2] = "out.m";
	//string *lines = new string[100];	// contain all the lines in the file
	string *result = new string[100], *first_parameter = new string[100], *second_parmeter = new string[100]; string *m_operation = new string[100];
	string matrix[100];
	string matrix_names[100];

	try {
		if (argc == 2) {
			string infile = argv[1];
			string outfile = "a.m"; //<= 3dlo lw hnst3ml out fe nfs al file

			int NoOfMatrices = getDataFromFile(infile, matrix_names, matrix, first_parameter, second_parmeter, m_operation, result);
			NoOfMatrices = passDataToOperators(NoOfMatrices, matrix_names, matrix, first_parameter, second_parmeter, m_operation, result);
			PrintToFile(outfile, NoOfMatrices, matrix_names, matrix, result);
			//cout << endl << CMatrix(matrix[0]).getDeterminant() << endl << CMatrix(matrix[1]).getDeterminant() << endl;
		}
		else if (argc == 1) {

			CMatrix matrices[100];
			string matrices_names[100];
			int matricesNo = 0;
			do {
				cout << ">> ";
				string input;
				getline(cin, input);
				if (input.length() == 0) continue;
				else if (input.find("[") != string::npos || input.find("+") != string::npos || input.find("-") != string::npos || input.find("*") != string::npos || input.find("/") != string::npos || input.find("./") != string::npos || input.find("'") != string::npos);
				else break;
				matricesNo = processInput(input, matrices_names, matrices, matricesNo);
			} while (true);
		}
		else throw("arguments are not complete");
	}
	catch (const char* error) { cout << error << endl; }

	delete[]result;
	delete[]first_parameter;
	delete[]second_parmeter;
	delete[]m_operation;

	return 0;
}
